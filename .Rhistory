Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
chart = data.frame(chart,cur_sta)
cur_sta = c("The Egyptian Prophecy: The Fate of Ramses","NA","0","NA","0")
for(i in Fy$Game[653:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("7,62 High Calibre","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[660:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("Reflex Arena","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[663:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("Amerzone: The Explorer’s Legacy","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[671:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("Rabbit Hole 3D: Steam Edition","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[675:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("Raptor: Call of the Shadows (1994 Classic Edition)","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[679:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
cur_sta = c("Super Trench Attack!","NA","0","NA","0")
chart = data.frame(chart,cur_sta)
for(i in Fy$Game[680:1682]){
cur = read_html(paste("https://www.metacritic.com/game/pc/",i,sep=""))
Name = cur %>%html_nodes("h1")%>%html_text()
Critic = cur %>%html_nodes(".positive span ,.mixed span,.negative span")%>%html_text()
if(length(Critic)==0)Critic = c("NA")
CriNum = cur %>%html_nodes(".count a span")%>%html_text()
User = cur %>%html_nodes(".feature_userscore a")%>%html_text()
if(length(User)==0)User = c("NA","0")
else if(User == "\ntbd\n    ") User = c("NA","0")
cur_sta = c(Name,Critic,CriNum,User)
chart = data.frame(chart,cur_sta)
}
a = 30
b = 30
while (a>0&&b>0){
nam = scan("持方(A或B):")
var = scan("Damage:")
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.")
}
nam = scan("持方(A或B):")
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = readline("Damage:")
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.")
}
a = 30
b = 30
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = readline("Damage:")
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.")
cat ("A =",a,"  B = ",b)
}
a = 30
b = 30
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = readline("Damage:")
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = as.integer(readline("Damage:"))
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = as.integer(readline("Damage:"))
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = as.integer(readline("Damage:"))
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
A = 14
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = as.integer(readline("Damage:"))
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
a
a =14
while (a>0&&b>0){
nam = readline("持方(A或B):")
var = as.integer(readline("Damage:"))
if(nam == "A"||nam =="a")a = a-var
else if (nam =="B"||nam =="b")b = b-var
else cat("Invalid input.\n")
cat ("A =",a,"  B = ",b,"\n")
}
load("C:/Users/perot/Desktop/NTU-CSX4001/CSX Final/.RData")
shiny::runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
shiny::runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
runApp('CSX Final/shiny/STEAMY')
shiny::runApp('C:/Users/perot/Desktop/CSX-Data-Science/final/Shiny/RGA')
shiny::runApp('C:/Users/perot/Desktop/CSX-Data-Science/final/Shiny/RGA')
runApp('C:/Users/perot/Desktop/CSX-Data-Science/final/Shiny/RGA')
runApp('C:/Users/perot/Desktop/CSX-Data-Science/final/Shiny/RGA')
runApp('C:/Users/perot/Desktop/CSX-Data-Science/final/Shiny/RGA')
setwd("C:/Users/perot/Desktop/CSX-Data-Science")
library(dplyr)
library(stringr)
# Read in data
display = read.csv("./final/complete/display_data_12-14.csv", stringsAsFactors = F)
dummy = read.csv("./final/complete/dummy_data_v2.csv", stringsAsFactors = F)
tag.relation = read.csv("./final/complete/tag_calculation.csv", stringsAsFactors = F)
## copy dummy dataset for calculation
dummy.1 = dummy[-451, ]
tag.relation.1 = tag.relation
## restructure column names
for(i in 1:326) {
names(dummy.1)[i] = str_replace_all(names(dummy.1[i]), "\\.", " ")
}
# Page 1: display the basic data
print("This function displays basic information for the game")
row.names(display) = display$Appid
display.list = setNames(split(display, seq(nrow(display))), rownames(display))
ent = readline(prompt = "Please enter ID number:")
str(target.list)
target.list = display.list[[ent]]
display.list = setNames(split(display, seq(nrow(display))), rownames(display))
View(display)
ent = readline(prompt = "Please enter ID number:")
target.list = display.list[[ent]]
str(target.list)
# Page 2: Criteria Selection
print("This part will demo the recommendation workflow")
## First category ranking: price, playtime and score
print("Please rank the following criteria: Price, Playtime or Scores")
## Second category ranking: Main Tags
### select the main function according to its main tag
print(paste("please rank the following crteria:", target.list$MainTags))
consider1 = readline("First considered factor:")
consider3 = readline("Third considered factor:")
# Read in data
display = read.csv("./final/complete/display_data_12-14.csv", stringsAsFactors = F)
dummy = read.csv("./final/complete/dummy_data_v2.csv", stringsAsFactors = F)
tag.relation = read.csv("./final/complete/tag_calculation.csv", stringsAsFactors = F)
## copy dummy dataset for calculation
dummy.1 = dummy[-451, ]
tag.relation.1 = tag.relation
View(dummy.1)
View(display.list)
runApp('final/Shiny/RGA')
View(dummy.1)
View(display.list)
View(display)
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
View(display)
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('C:/Users/perot/Desktop/NTU-CSX4001/CSX Final/shiny/RGA')
library(shiny)
runApp('C:/Users/perot/Desktop/NTU-CSX4001/CSX Final/shiny/RGA')
runApp('C:/Users/perot/Desktop/NTU-CSX4001/CSX Final/shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
tags = unlist(strsplit(display$MainTags, ","))
tags = data.frame(unlist(strsplit(display$MainTags, ",")))
View(tags)
tags = data.frame(display$Game,display$MainTags)
View(tags)
View(tags)
for(i in length(tags$display.MainTags)){
tags$TAG[i] = unlist(tags$display.MainTags)
}
tags$TAG[i] = c(unlist(tags$display.MainTags))
for(i in length(tags$display.MainTags)){
tags$TAG[i] = c(unlist(tags$display.MainTags))
}
for(i in length(tags$display.MainTags)){
tags$TAG[i] = list(unlist(tags$display.MainTags))
}
View(tags)
runApp('final/Shiny/RGA')
for(i in length(tags$display.MainTags)){
tags$TAG[i] = list(unlist(tags$display.MainTags[i]))
}
View(tags)
unlist(tags$display.MainTags[i]))
ass = unlist(tags$display.MainTags[i])
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
shinyUI(
navbarPage("CSX_PCGame",
tabPanel("Intro",
fluidPage(theme = "bootstrap.css",
headerPanel("PCGame: Recommendation to your desire"),
textOutput("intro")
)
)
,
tabPanel("Gamesearch",
fluidPage(theme = "bootstrap.css",
sidebarPanel(
selectInput('Namae', 'GameName', choices = display$Game)
),
target.list = display.list[[naee]],
maintag.vector = unlist(strsplit(target.list$MainTags, ",")),
mainPanel(
verbatimTextOutput("trialName")
)
)
)
,
tabPanel("chart",
h2(textOutput("inst1")),
sidebarPanel(
selectInput('criteria1', 'Your 1st Preference',c("None","Price","Playtime","Score")),
selectInput('criteria2', 'Your 2nd Preference',c("None","Price","Playtime","Score")),
selectInput('criteria3', 'Your 3rd Preference',c("None","Price","Playtime","Score"))
),
h2(textOutput("inst2")),
sidebarPanel(
selectInput('pref1', 'Your 1st Preference',choices = maintag.vector),
selectInput('pref2', 'Your 2nd Preference',choices = maintag.vector),
selectInput('pref3', 'Your 3rd Preference',choices = maintag.vector),
actionButton("update", "Search")
),
mainPanel(DT::dataTableOutput("charteria"))
)
)
)
shinyUI(
navbarPage("CSX_PCGame",
tabPanel("Intro",
fluidPage(theme = "bootstrap.css",
headerPanel("PCGame: Recommendation to your desire"),
textOutput("intro")
)
)
,
tabPanel("Gamesearch",
fluidPage(theme = "bootstrap.css",
sidebarPanel(
selectInput('Namae', 'GameName', choices = display$Game)
),
target.list = display.list[[naee]],
maintag.vector = unlist(strsplit(target.list$MainTags, ",")),
mainPanel(
verbatimTextOutput("trialName")
)
)
)
,
tabPanel("chart",
h2(textOutput("inst1")),
sidebarPanel(
selectInput('criteria1', 'Your 1st Preference',c("None","Price","Playtime","Score")),
selectInput('criteria2', 'Your 2nd Preference',c("None","Price","Playtime","Score")),
selectInput('criteria3', 'Your 3rd Preference',c("None","Price","Playtime","Score"))
),
h2(textOutput("inst2")),
sidebarPanel(
selectInput('pref1', 'Your 1st Preference',choices = maintag.vector),
selectInput('pref2', 'Your 2nd Preference',choices = maintag.vector),
selectInput('pref3', 'Your 3rd Preference',choices = maintag.vector),
actionButton("update", "Search")
),
mainPanel(DT::dataTableOutput("charteria"))
)
)
)
shinyUI(
navbarPage("CSX_PCGame",
tabPanel("Intro",
fluidPage(theme = "bootstrap.css",
headerPanel("PCGame: Recommendation to your desire"),
textOutput("intro")
)
)
,
tabPanel("Gamesearch",
fluidPage(theme = "bootstrap.css",
sidebarPanel(
selectInput('Namae', 'GameName', choices = display$Game)
),
target.list = display.list[[Namae]],
maintag.vector = unlist(strsplit(target.list$MainTags, ",")),
mainPanel(
verbatimTextOutput("trialName")
)
)
)
,
tabPanel("chart",
h2(textOutput("inst1")),
sidebarPanel(
selectInput('criteria1', 'Your 1st Preference',c("None","Price","Playtime","Score")),
selectInput('criteria2', 'Your 2nd Preference',c("None","Price","Playtime","Score")),
selectInput('criteria3', 'Your 3rd Preference',c("None","Price","Playtime","Score"))
),
h2(textOutput("inst2")),
sidebarPanel(
selectInput('pref1', 'Your 1st Preference',choices = maintag.vector),
selectInput('pref2', 'Your 2nd Preference',choices = maintag.vector),
selectInput('pref3', 'Your 3rd Preference',choices = maintag.vector),
actionButton("update", "Search")
),
mainPanel(DT::dataTableOutput("charteria"))
)
)
)
shinyUI(
navbarPage("CSX_PCGame",
tabPanel("Intro",
fluidPage(theme = "bootstrap.css",
headerPanel("PCGame: Recommendation to your desire"),
textOutput("intro")
)
)
,
tabPanel("Gamesearch",
fluidPage(theme = "bootstrap.css",
sidebarPanel(
selectInput('Namae', 'GameName', choices = display$Game)
),
target.list = display.list[[input$Namae]],
maintag.vector = unlist(strsplit(target.list$MainTags, ",")),
mainPanel(
verbatimTextOutput("trialName")
)
)
)
,
tabPanel("chart",
h2(textOutput("inst1")),
sidebarPanel(
selectInput('criteria1', 'Your 1st Preference',c("None","Price","Playtime","Score")),
selectInput('criteria2', 'Your 2nd Preference',c("None","Price","Playtime","Score")),
selectInput('criteria3', 'Your 3rd Preference',c("None","Price","Playtime","Score"))
),
h2(textOutput("inst2")),
sidebarPanel(
selectInput('pref1', 'Your 1st Preference',choices = maintag.vector),
selectInput('pref2', 'Your 2nd Preference',choices = maintag.vector),
selectInput('pref3', 'Your 3rd Preference',choices = maintag.vector),
actionButton("update", "Search")
),
mainPanel(DT::dataTableOutput("charteria"))
)
)
)
shinyUI(
navbarPage("CSX_PCGame",
tabPanel("Intro",
fluidPage(theme = "bootstrap.css",
headerPanel("PCGame: Recommendation to your desire"),
textOutput("intro")
)
)
,
tabPanel("Gamesearch",
fluidPage(theme = "bootstrap.css",
sidebarPanel(
selectInput('Namae', 'GameName', choices = display$Game)
),
target.list = display.list[["Namae"]],
maintag.vector = unlist(strsplit(target.list$MainTags, ",")),
mainPanel(
verbatimTextOutput("trialName")
)
)
)
,
tabPanel("chart",
h2(textOutput("inst1")),
sidebarPanel(
selectInput('criteria1', 'Your 1st Preference',c("None","Price","Playtime","Score")),
selectInput('criteria2', 'Your 2nd Preference',c("None","Price","Playtime","Score")),
selectInput('criteria3', 'Your 3rd Preference',c("None","Price","Playtime","Score"))
),
h2(textOutput("inst2")),
sidebarPanel(
selectInput('pref1', 'Your 1st Preference',choices = maintag.vector),
selectInput('pref2', 'Your 2nd Preference',choices = maintag.vector),
selectInput('pref3', 'Your 3rd Preference',choices = maintag.vector),
actionButton("update", "Search")
),
mainPanel(DT::dataTableOutput("charteria"))
)
)
)
runApp('final/Shiny/RGA')
runApp('final/Shiny/RGA')
## copy dummy dataset for calculation
dummy.1 = dummy[-452, ]
## copy dummy dataset for calculation
dummy.1 = dummy[-451, ]
View(dummy.1)
